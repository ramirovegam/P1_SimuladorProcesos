
package principal;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import p1.engine.SimulationResult;
import p1.model.Proceso;
import p1.scheduler.FCFS;
import p1.scheduler.Planificador;
import p1.scheduler.SJF;
import p1.scheduler.SRTF;
import p1.ui.GanttPanel;




/**
 *
 * @author RVega
 */


public class VentanaPrincipal extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName());
    private DefaultTableModel modeloTabla;
    private final GanttPanel gantt = new GanttPanel();
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        initCustom();
        gantt.setPreferredSize(new Dimension(600, 200));
    }

    private void initCustom() {
    // Modelo de la JTable
    modeloTabla = (DefaultTableModel) tablaProcesos.getModel();

    // Limpia filas nulas generadas por default (si las hay)
    modeloTabla.setRowCount(0);

    // Asegura cabeceras correctas
    if (modeloTabla.getColumnCount() < 3) {
        modeloTabla.setColumnCount(3);
    }
    modeloTabla.setColumnIdentifiers(new Object[]{"ID", "Llegada", "Ráfaga"});

    // Inserta el GanttPanel en el panelGantt que ya tienes en el formulario
    panelGantt.setLayout(new BorderLayout());
    panelGantt.add(gantt, BorderLayout.CENTER);
    panelGantt.revalidate();
    panelGantt.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        tiempoLlegada = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cpuBurst = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        quantum = new javax.swing.JTextField();
        tipoAlgoritmo = new javax.swing.JComboBox<>();
        jScrollPane = new javax.swing.JScrollPane();
        tablaProcesos = new javax.swing.JTable();
        simularRun = new javax.swing.JButton();
        panelGantt = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Algoritmo");

        btnAgregar.setText("Agregar Proceso");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel5.setText("Tiempo llegada");

        jLabel6.setText("CPU Burst");

        jLabel1.setText("Quantum");

        tipoAlgoritmo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RR", "FCFS", "SJF", "SRTF" }));
        tipoAlgoritmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoAlgoritmoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tiempoLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cpuBurst, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(quantum, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                            .addComponent(tipoAlgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(46, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(tipoAlgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(7, 7, 7)
                .addComponent(tiempoLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(7, 7, 7)
                .addComponent(cpuBurst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        tablaProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Llegada", "Ráfaga"
            }
        ));
        jScrollPane.setViewportView(tablaProcesos);

        simularRun.setText("RUN");
        simularRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simularRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGanttLayout = new javax.swing.GroupLayout(panelGantt);
        panelGantt.setLayout(panelGanttLayout);
        panelGanttLayout.setHorizontalGroup(
            panelGanttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 601, Short.MAX_VALUE)
        );
        panelGanttLayout.setVerticalGroup(
            panelGanttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(simularRun)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(panelGantt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(simularRun)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelGantt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Algoritmos de planificacion", jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 808, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Algoritmos de reemplazo de pagina", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 847, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {                                           
//GEN-FIRST:event_btnAgregarActionPerformed
    try {
        String id = "P" + (modeloTabla.getRowCount() + 1);
        int llegada = Integer.parseInt(tiempoLlegada.getText().trim());
        int rafaga  = Integer.parseInt(cpuBurst.getText().trim());
        if (llegada < 0 || rafaga <= 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Llegada ≥ 0 y Ráfaga > 0");
            return;
        }
        modeloTabla.addRow(new Object[]{id, llegada, rafaga});
    } catch (NumberFormatException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Ingresa números válidos en Llegada y Ráfaga.");
    }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

    int totalFilas = modeloTabla.getRowCount();
    if (totalFilas > 0) {
        modeloTabla.removeRow(totalFilas - 1); // Elimina la última fila
        // Reetiquetar IDs
        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            modeloTabla.setValueAt("P" + (i + 1), i, 0);
        }
    } else {
        JOptionPane.showMessageDialog(this, "No hay procesos para eliminar.");
    }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void simularRunActionPerformed(java.awt.event.ActionEvent evt) {                                           

//GEN-FIRST:event_simularRunActionPerformed
    var procesos = leerProcesosDeTabla();
    if (procesos.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Agrega al menos un proceso.");
        return;
    }

    String algoritmo = String.valueOf(tipoAlgoritmo.getSelectedItem());
    Planificador planificador;

    if ("RR".equals(algoritmo)) {
        try {
            int q = Integer.parseInt(quantum.getText().trim());
            if (q <= 0) throw new NumberFormatException();
            planificador = new p1.schedule.RR(q);
        } catch (NumberFormatException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Quantum debe ser un número entero positivo.");
            return;
        }
    } else {
        planificador = crearPlanificador(); // FCFS, SJF, SRTF, etc.
    }

    SimulationResult result = planificador.simular(procesos);
    gantt.setSegments(result.getTimeline());

    // Mostrar métricas en orden de ejecución
    StringBuilder sb = new StringBuilder("=== Métricas ===\n");
    double e = 0, r = 0, tt = 0; int n = 0;
    Set<String> mostrados = new HashSet<>();

    for (var seg : result.getTimeline()) {
        String pid = seg.getProcesoId();
        if ("IDLE".equals(pid) || mostrados.contains(pid)) continue;

        var m = result.getMetricsPorProceso().get(pid);
        sb.append(String.format("%s -> espera=%d, respuesta=%d, turnaround=%d%n",
                pid, m.espera, m.respuesta, m.turnaround));
        e += m.espera; r += m.respuesta; tt += m.turnaround; n++;
        mostrados.add(pid);
    }

    if (n > 0) {
        sb.append(String.format("%nPromedios: espera=%.2f, respuesta=%.2f, turnaround=%.2f", e/n, r/n, tt/n));
    }

    javax.swing.JOptionPane.showMessageDialog(this, sb.toString(),
            "Resultados " + tipoAlgoritmo.getSelectedItem(),
            javax.swing.JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_simularRunActionPerformed

    private void tipoAlgoritmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoAlgoritmoActionPerformed
        // TODO add your handling code here:
    String seleccionado = String.valueOf(tipoAlgoritmo.getSelectedItem());

        if ("RR".equals(seleccionado)) {
            quantum.setEnabled(true);
        } else {
            quantum.setEnabled(false);
        }

    }//GEN-LAST:event_tipoAlgoritmoActionPerformed
    
    
private List<Proceso> leerProcesosDeTabla() {
    List<Proceso> lista = new ArrayList<>();
    for (int i = 0; i < modeloTabla.getRowCount(); i++) {
        String id = String.valueOf(modeloTabla.getValueAt(i, 0));
        int llegada = Integer.parseInt(String.valueOf(modeloTabla.getValueAt(i, 1)));
        int rafaga  = Integer.parseInt(String.valueOf(modeloTabla.getValueAt(i, 2)));
        lista.add(new Proceso(id, llegada, rafaga));
    }
    return lista;
}


private Planificador crearPlanificador() {
    String alg = String.valueOf(tipoAlgoritmo.getSelectedItem());
    switch (alg) {
        case "FCFS": return new FCFS();
        case "SJF":  return new SJF();
        case "SRTF": return new SRTF();
        default: return new FCFS();
    }
}

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new VentanaPrincipal().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JTextField cpuBurst;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JPanel panelGantt;
    private javax.swing.JTextField quantum;
    private javax.swing.JButton simularRun;
    private javax.swing.JTable tablaProcesos;
    private javax.swing.JTextField tiempoLlegada;
    private javax.swing.JComboBox<String> tipoAlgoritmo;
    // End of variables declaration//GEN-END:variables
}
